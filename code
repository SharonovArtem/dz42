using System;
using System.Text.RegularExpressions;

namespace dzkurs
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Market market = new Market();
            Seller seller = new Seller(0, null);
            Player player = new Player(0, null);
            bool isWorking = true;
            ConsoleKeyInfo key;

            seller.AddProduct("Пила", 15);
            seller.AddProduct("Карандаш", 2);
            seller.AddProduct("Отвёртка", 10);
            seller.AddProduct("Моторная лодка", 200);
            seller.AddProduct("Ручка", 3);
            seller.AddProduct("Лобзик", 12);

            Console.WriteLine("Добро пожаловать в магазин! Чего изволите?");

            while (isWorking)
            {
                Console.WriteLine("Что у вас есть? - Q");
                Console.WriteLine("Хочу сделать покупку - W");
                Console.WriteLine("На вашем счету " + player.ShowMoney + " денег");
                Console.WriteLine("Вот что у вас есть");
                key = Console.ReadKey(true);

                if (key.Key == ConsoleKey.Q)
                {
                    seller.ShowProducts();
                }
                else if (key.Key == ConsoleKey.W)
                {
                    market.GetProduct(player, seller);
                }
                else if (key.Key == ConsoleKey.Escape)
                {
                    Console.WriteLine("До свидания!");
                    isWorking = false;
                }
                else
                {
                    Console.WriteLine("Что-то я вас не понимаю");
                }

                Console.WriteLine("Что-нибудь ещё?");
            }
        }
    }

    class Player : MarketParticipant
    {
        public Player(int money, List<Product> products) : base(money, products)
        { }     

        public void ShowMoney()
        {
            Console.Write(Money);
        }

        public void GetProductFromMarket(Product gottenProduct)
        {
            Products.Add(gottenProduct);
        }
    }

    class Seller : MarketParticipant
    {
        
        public Seller(int money, List<Product> products) : base(money, products)
        {
            
        }

        public void GetMoney(int moneyFromSell)
        {
            Money += moneyFromSell;

            Console.WriteLine("Деньги продавца - " + Money);
        }

        public void ShowMoney()
        {
            Console.Write(Money);
        }

        public void ShowProductsToMarket(List<Product> products)
        {
            products = Products;
        }
             
        public List<Product> AddProduct(string name, int price)
        {
            Product product = new Product(name, price);
            Products.Add(product);

            return Products;
        }

        public void ShowProducts()
        {
            for (int i = 0; i < Products.Count; i++)
            {
                Console.WriteLine(Products[i].Name + " " + Products[i].Price);
            }
        }
    }

    class Product
    {
        public Product(string name, int price)
        {
            Name = name;
            Price = price;
        }

        public string Name { get; private set; }
        public int Price { get; private set; }
    }

    class MarketParticipant
    {
        protected int Money;
        protected List<Product> Products;

        public MarketParticipant(int money, List<Product> products)
        {
            products = Products;
            money = Money;
        }
    }

    class Market
    {
        private Product _soldProduct = new Product(null, 0);

        public bool TryGetProduct(List<Product> products,  Player player, Seller seller, Product product)
        {
            bool isGotten = false;

            Console.WriteLine("Введите название продукта");

            String userInput = Console.ReadLine();

            for (int i = 0; i < products.Count; i++)
            {
                if (products[i].Name == userInput)
                {
                    product = products[i];
                    isGotten = true;
                }
            }

            return isGotten;
        }

        public void SellProduct(Player player, Seller seller)
        {
            List<Product> products = new List<Product>();
            Product product = new Product(null, 0);

            seller.ShowProductsToMarket(products);

            if (TryGetProduct(products, player, seller, product))
            {
                _soldProduct = product;
            }
            else
            {
                Console.WriteLine("Что-то я не вижу такого товара...");
            }
        }

        public void GetProduct(Player player, Seller seller)
        {
            SellProduct(player, seller);

            player.GetProductFromMarket(_soldProduct);
        }
    }
}
